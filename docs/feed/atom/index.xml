<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="english"><id>/</id><title>Yuan's Blog</title><updated>2025-04-09T17:23:51.972042+08:06</updated><author><name>Yuan</name><email>im.wuxiaoyuan@gmail.com</email></author><link href="/" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><logo>/android-chrome-512x512.png</logo><subtitle>Hello, World!</subtitle><entry><id>/archives/quartz-plus/</id><title>quartz-plus</title><updated>2025-04-09T09:23:51.972042+00:00</updated><author><name>wuxiaoyuan</name><email>im.wuxiaoyuan@gmail.com</email><uri>https://tripleyuan.github.io/</uri></author><content>&lt;p&gt;在工作中，我经常会使用到 Quartz，一个开源的分布式任务调度框架。然而，尽管 Quartz 提供了强大的功能，我在使用过程中却遇到了一些痛点：&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Quartz 不支持注解的方式定义Job，这导致我们只能通过硬编码的方式创建&lt;code&gt;Job&lt;/code&gt;和&lt;code&gt;Trigger&lt;/code&gt;，并手动注册到 Quartz scheduler 中。&lt;/li&gt;
&lt;li&gt;Quartz 未提供任务调度管理界面。在实际工作中，我常常需要手动触发某个Job的执行，然而由于缺少管理页面，我们只能通过修改数据库中 trigger 的执行时间来间接触发 job 的执行，这显然不是一个高效的方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决这些问题，提高开发效率，我基于 Spring 对 Quartz 进行了扩展，开发了一个名为 Quartz Plus 的工具库：&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;支持注解的方式快速定义&lt;code&gt;Job&lt;/code&gt;和&lt;code&gt;Trigger&lt;/code&gt;：使用 @QuartzJob 和 @QuartzTrigger 注解，我们可以快速地定义&lt;code&gt;Job&lt;/code&gt;和&lt;code&gt;Trigger&lt;/code&gt;，并且它们会自动注册到&lt;code&gt;Quartz Scheduler&lt;/code&gt;中。&lt;/li&gt;
&lt;li&gt;实现了一个带有管理界面的 Quartz 任务调度中心：该任务调度中心提供了完整的管理界面，包括 job 管理、Quartz 实例管理、用户管理等功能，使我们能够更方便地管理和监控任务调度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目源码地址：&lt;a href="https://github.com/TripleYuan/quartz-plus.git"&gt;https://github.com/TripleYuan/quartz-plus.git&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;快速上手&lt;/h2&gt;
&lt;h3&gt;部署Quartz任务调度系统&lt;/h3&gt;
&lt;p&gt;调度系统分为前端和后端两个项目，可以分开部署 &lt;strong&gt;quartz-plus-scheduler-center&lt;/strong&gt;（调度服务） 和 &lt;strong&gt;quartz-plus-web-console&lt;/strong&gt;（前端应用），也可将前端代码打包后的静态资源文件集成到 &lt;code&gt;quartz-plus-scheduler-center&lt;/code&gt; 中。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;quartz-plus-scheduler-center&lt;/code&gt; 默认使用的是H2数据库，生产环境建议使用外部数据库，如 MySQL、PostgreSQL 等。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;系统内置了两个登录用户：&lt;/p&gt;&lt;blockquote&gt;
&lt;p&gt;用户1：用户名为 admin，密码为 123456，拥有管理员权限。&lt;/p&gt;&lt;p&gt;用户2：用户名为 quartz，密码为 123456，仅具有普通用户权限。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3&gt;SpringBoot应用接入&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;引入最新版本&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;redcoder&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;quartz-plus-core&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${quartzplus.latest.version}&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;在启用类上添加注解 &lt;code&gt;@QuartzJobScan&lt;/code&gt;，并指定 job 类所在的包路径。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class="nd"&gt;@QuartzJobScan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;redcoder.quartzplus.demo.job&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QuartzPlusDemoApplication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;SpringApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QuartzPlusDemoApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;添加配置，指定注册中心服务地址&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;quartz-job-scheduler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;registry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# 调度服务注册地址（替换成你的IP和端口）&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;register-url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;http://localhost:32007/api/quartz-job-scheduler/instance/register&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# 调度服务取消注册地址（替换成你的IP和端口）&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;unregister-url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;http://localhost:32007/api/quartz-job-scheduler/instance/unregister&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;注解式定义Job和Trigger&lt;/h3&gt;
&lt;p&gt;使用 &lt;strong&gt;@QuartzJob&lt;/strong&gt; 和 &lt;strong&gt;@QuartzTrigger&lt;/strong&gt; 注解快速定义 &lt;code&gt;Job&lt;/code&gt;和&lt;code&gt;Trigger&lt;/code&gt;：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@QuartzJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;打印 hello world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@QuartzTrigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0/10 * * * * ?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloWorldJob&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;implements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Job&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JobExecutionContext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;throws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;JobExecutionException&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello world, current time: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LocalDateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;now&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DateTimeFormatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ISO_LOCAL_DATE_TIME&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><link href="/archives/quartz-plus/"/><published>2025-03-20T17:51:02+08:06</published></entry><entry><id>/archives/rc-initializr/</id><title>rc-initializr</title><updated>2025-04-09T09:23:51.972042+00:00</updated><author><name>wuxiaoyuan</name><email>im.wuxiaoyuan@gmail.com</email><uri>https://tripleyuan.github.io/</uri></author><content>&lt;p&gt;&lt;a href="https://github.com/spring-io/initializr"&gt;Spring Initializr&lt;/a&gt; 是一个基于Web的工具，可快速创建SpringBoot项目。一些流行的IDE，比如Intellij IDEA，已经集成了Spring Initializr，帮助我们快速创建一个SpirngBoot项目。&lt;/p&gt;&lt;p&gt;官方提供的Spring Initializr生成的SpringBoot项目十分简单，如下所示：&lt;/p&gt;&lt;figure style="flex: 36.59090909090909" &gt;&lt;img loading="lazy" width="483" height="660" src="/archives/assets/4e91fdbca57392e493dc5f06a90202a0.png" /&gt;&lt;/figure&gt;&lt;p&gt;我们在日常开发中，经常需要创建各种项目，而这些项目之间，可能存在大量相同，甚至类似的代码，比如Redis配置类、Quartz配置类、一些常用的工具类等等。为了在创建新的项目时，一并生成这些可重复使用的代码，rc-initializr诞生了，它是基于Spring Initializr定制的项目生成器。&lt;/p&gt;&lt;p&gt;下面以Intellij IDEA为例，演示如何使用rc-initializr创建项目：&lt;/p&gt;&lt;p&gt;(1)  打开Intellij IDEA，进入New Project界面&lt;/p&gt;&lt;figure style="flex: 54.15584415584416" &gt;&lt;img loading="lazy" width="834" height="770" src="/archives/assets/b8a626381cbeaf57abbfd04a5f8386d6.png" /&gt;&lt;figcaption&gt;step1.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;修改Service Url为：&lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; (本地启动的服务地址，根据实际情况填写)&lt;/p&gt;&lt;p&gt;输入项目信息后，点击Next&lt;/p&gt;&lt;p&gt;(2) 选择SpringBoot版本和依赖&lt;/p&gt;&lt;figure style="flex: 54.15584415584416" &gt;&lt;img loading="lazy" width="834" height="770" src="/archives/assets/25abe75add0aa61dfff67ef06b253e66.png" /&gt;&lt;figcaption&gt;step2.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;默认添加的依赖：spring-web, spring-data-redis, jedis, quartz, validation, apache-commons-pool, apache-commons-lang3, commons-collections, lombok, spring-data-jpa.&lt;/p&gt;&lt;p&gt;(3) 点击Finish，项目创建成功，目录结构如下&lt;/p&gt;&lt;figure style="flex: 54.15584415584416" &gt;&lt;img loading="lazy" width="834" height="770" src="/archives/assets/25abe75add0aa61dfff67ef06b253e66.png" /&gt;&lt;figcaption&gt;step3.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;至此，项目创建完成，包含了我们常用的配置代码、工具类和一些依赖等。&lt;/p&gt;</content><link href="/archives/rc-initializr/"/><published>2025-03-20T20:19:16+08:06</published></entry></feed>